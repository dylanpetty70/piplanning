{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dylan\\\\source\\\\repos\\\\piplanning-main\\\\src\\\\components\\\\activePage\\\\main.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { handleNewActiveSimulation, handleGrabActiveSimulation, handleDeleteActiveSimulation } from '../../actions/simulation';\nimport { handleChangeUserStatus } from '../../actions/userStatus';\nimport Form from 'react-bootstrap/Form';\nimport Modal from 'react-bootstrap/Modal';\nimport Button from 'react-bootstrap/Button';\nimport SimulationSheet from './simulationSheet';\nimport PulseLoader from 'react-spinners/PulseLoader';\nimport { withRouter } from 'react-router';\nconst password = 'ACoEAccess';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      showNew: false,\n      showDelete: false,\n      tempNewName: '',\n      tempNewTemplate: '',\n      selectSim: '',\n      status: true,\n      tempPassword: '',\n      tempPasswordCorrect: true\n    };\n    this.newSimulation = this.newSimulation.bind(this);\n    this.deleteSimulation = this.deleteSimulation.bind(this);\n    this.copyToClipboard = this.copyToClipboard.bind(this);\n    this.userStatus = this.userStatus.bind(this);\n  }\n\n  userStatus() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: !this.props.userStatus,\n      backdrop: \"static\",\n      keyboard: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }\n    }, \"ACoE Access Password\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"simulationName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"password\",\n      placeholder: \"Password\",\n      onKeyPress: event => {\n        if (event.key === \"Enter\") {\n          event.preventDefault();\n\n          if (this.state.tempPassword === password) {\n            this.props.handleChangeUserStatus();\n          } else {\n            this.setState({ ...this.state,\n              tempPasswordCorrect: false\n            });\n          }\n        }\n      },\n      onChange: text => {\n        this.setState({ ...this.state,\n          tempPassword: text.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }\n    }), !this.state.tempPasswordCorrect ? /*#__PURE__*/React.createElement(Form.Text, {\n      style: {\n        color: 'red'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 66\n      }\n    }, \"Incorrect Password\") : /*#__PURE__*/React.createElement(React.Fragment, null)))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => {\n        if (this.state.tempPassword === password) {\n          this.props.handleChangeUserStatus();\n        } else {\n          this.setState({ ...this.state,\n            tempPasswordCorrect: false\n          });\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }, \"Submit\")));\n  }\n\n  newSimulation() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showNew,\n      onHide: () => {\n        this.setState({ ...this.state,\n          showNew: false\n        });\n      },\n      backdrop: \"static\",\n      keyboard: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }\n    }, \"New Active Simulation\")), /*#__PURE__*/React.createElement(Modal.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"simulationName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 29\n      }\n    }, \"Simulation Name\"), /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"username\",\n      placeholder: \"Enter New Simulation Name\",\n      onChange: text => {\n        this.setState({ ...this.state,\n          tempNewName: text.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 29\n      }\n    })), /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Form.Label, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 29\n      }\n    }, \"Choose Template Simulation to Use\"), /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      className: \"my-1 mr-sm-2\",\n      onChange: text => {\n        if (text.target.value !== '') {\n          this.setState({ ...this.state,\n            tempNewTemplate: text.target.value\n          });\n        }\n      },\n      defaultValue: \"\",\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, \"Choose Template Simulation\"), Object.keys(this.props.templateSimulation.options).map(key => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: key,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 45\n        }\n      }, this.props.templateSimulation.options[key]);\n    }))))), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }\n    }, this.state.tempNewTemplate !== '' && this.state.tempNewName !== '' ? /*#__PURE__*/React.createElement(Button, {\n      variant: \"primary\",\n      onClick: () => {\n        this.props.handleNewActiveSimulation(this.state.tempNewName, this.state.tempNewTemplate);\n        this.setState({ ...this.state,\n          showNew: false,\n          tempNewName: '',\n          tempNewTemplate: ''\n        });\n        alert(this.state.tempNewName + ' Created!');\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 25\n      }\n    }, \"Create\") : /*#__PURE__*/React.createElement(React.Fragment, null), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => {\n        this.setState({ ...this.state,\n          showNew: false,\n          tempNewName: '',\n          tempNewTemplate: ''\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 21\n      }\n    }, \"Cancel\")));\n  }\n\n  deleteSimulation() {\n    return /*#__PURE__*/React.createElement(Modal, {\n      show: this.state.showDelete,\n      onHide: () => {\n        this.setState({ ...this.state,\n          showDelete: false\n        });\n      },\n      backdrop: \"static\",\n      keyboard: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Modal.Title, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 21\n      }\n    }, \"Are you sure you want to delete \", this.props.activeSimulation.simulation.activeName, \"?\")), /*#__PURE__*/React.createElement(Modal.Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      variant: \"danger\",\n      onClick: () => {\n        this.setState({ ...this.state,\n          showDelete: false,\n          selectSim: ''\n        });\n        this.props.handleDeleteActiveSimulation(this.state.selectSim);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    }, \"Delete\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      onClick: () => {\n        this.setState({ ...this.state,\n          showDelete: false\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 21\n      }\n    }, \"Cancel\")));\n  }\n\n  copyToClipboard() {\n    const el = document.createElement('textarea');\n    const root = window.location.origin + '/viewsimulation/';\n    el.value = root + this.props.activeSimulation.simulation.key;\n    el.setAttribute('readOnly', '');\n    el.style.position = 'absolute';\n    el.style.left = '-9999px';\n    document.body.appendChild(el);\n    el.select();\n    document.execCommand('copy');\n    document.body.removeChild(el);\n    alert('Copied: ' + root + this.props.activeSimulation.simulation.key);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 13\n      }\n    }, this.newSimulation(), this.deleteSimulation(), this.userStatus(), /*#__PURE__*/React.createElement(Form, {\n      inline: true,\n      style: {\n        margin: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      className: \"my-1 mr-sm-2\",\n      onChange: text => {\n        if (text.target.value !== '') {\n          this.setState({ ...this.state,\n            selectSim: text.target.value,\n            status: false\n          });\n          this.props.handleGrabActiveSimulation(text.target.value);\n          setTimeout(() => {\n            this.setState({ ...this.state,\n              status: true\n            });\n          }, 1000);\n        }\n      },\n      defaultValue: \"\",\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, \"Choose Active Simulation\"), Object.keys(this.props.activeSimulation.options).map(key => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: key,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 37\n        }\n      }, this.props.activeSimulation.options[key]);\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-success\",\n      style: {\n        marginLeft: '10px'\n      },\n      onClick: () => {\n        this.setState({ ...this.state,\n          showNew: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, \"Create Active Simulation\"), this.state.selectSim !== '' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-danger\",\n      style: {\n        marginLeft: '10px'\n      },\n      onClick: () => {\n        this.setState({ ...this.state,\n          showDelete: true\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }\n    }, \"Delete Current Simulation\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"outline-secondary\",\n      style: {\n        marginLeft: '10px'\n      },\n      onClick: () => {\n        this.copyToClipboard();\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, \"Copy Simulation Link\"), \" \") : /*#__PURE__*/React.createElement(React.Fragment, null)), this.state.status ? this.state.selectSim !== '' ? /*#__PURE__*/React.createElement(SimulationSheet, {\n      sim: this.state.selectSim,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 25\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(PulseLoader, {\n      css: {\n        position: 'absolute',\n        top: '40vh',\n        left: '40vw'\n      },\n      size: 100,\n      color: \"#123abc\",\n      loading: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 21\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeSimulation: state.activeSimulation,\n    templateSimulation: state.templateSimulation,\n    userStatus: state.userStatus\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  handleNewActiveSimulation,\n  handleGrabActiveSimulation,\n  handleDeleteActiveSimulation,\n  handleChangeUserStatus\n})(Main));","map":{"version":3,"sources":["C:/Users/dylan/source/repos/piplanning-main/src/components/activePage/main.js"],"names":["React","Component","connect","handleNewActiveSimulation","handleGrabActiveSimulation","handleDeleteActiveSimulation","handleChangeUserStatus","Form","Modal","Button","SimulationSheet","PulseLoader","withRouter","password","Main","constructor","props","state","showNew","showDelete","tempNewName","tempNewTemplate","selectSim","status","tempPassword","tempPasswordCorrect","newSimulation","bind","deleteSimulation","copyToClipboard","userStatus","event","key","preventDefault","setState","text","target","value","color","Object","keys","templateSimulation","options","map","alert","activeSimulation","simulation","activeName","el","document","createElement","root","window","location","origin","setAttribute","style","position","left","body","appendChild","select","execCommand","removeChild","render","margin","setTimeout","marginLeft","top","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { handleNewActiveSimulation, handleGrabActiveSimulation, handleDeleteActiveSimulation } from '../../actions/simulation';\r\nimport { handleChangeUserStatus } from '../../actions/userStatus';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\nimport SimulationSheet from './simulationSheet';\r\nimport PulseLoader from 'react-spinners/PulseLoader';\r\nimport { withRouter } from 'react-router';\r\n\r\nconst password = 'ACoEAccess';\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            showNew: false,\r\n            showDelete: false,\r\n            tempNewName: '',\r\n            tempNewTemplate: '',\r\n            selectSim: '',\r\n            status: true,\r\n            tempPassword: '',\r\n            tempPasswordCorrect: true\r\n        }\r\n        this.newSimulation = this.newSimulation.bind(this);\r\n        this.deleteSimulation = this.deleteSimulation.bind(this);\r\n        this.copyToClipboard = this.copyToClipboard.bind(this);\r\n        this.userStatus = this.userStatus.bind(this);\r\n    }\r\n\r\n    userStatus() {\r\n        return (\r\n            <Modal\r\n                show={!this.props.userStatus}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>ACoE Access Password</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form className=\"container\">\r\n                        <Form.Group controlId=\"simulationName\">\r\n                            <Form.Control type='password' placeholder='Password' onKeyPress={event => { if (event.key === \"Enter\") { event.preventDefault(); if (this.state.tempPassword === password) { this.props.handleChangeUserStatus(); } else { this.setState({ ...this.state, tempPasswordCorrect: false }); }} }} onChange={(text) => { this.setState({ ...this.state, tempPassword: text.target.value }) }} />\r\n                            {(!this.state.tempPasswordCorrect) ? <Form.Text style={{ color: 'red' }}>Incorrect Password</Form.Text> : <></>}\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    <Button variant=\"primary\" onClick={() => { if (this.state.tempPassword === password) { this.props.handleChangeUserStatus(); } else { this.setState({ ...this.state, tempPasswordCorrect: false }); } }}>\r\n                        Submit\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    newSimulation() {\r\n        return (\r\n            <Modal\r\n                show={this.state.showNew}\r\n                onHide={() => { this.setState({ ...this.state, showNew: false }) }}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>New Active Simulation</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <Form className=\"container\">\r\n                        <Form.Group controlId=\"simulationName\">\r\n                            <Form.Label>Simulation Name</Form.Label>\r\n                            <Form.Control type='username' placeholder='Enter New Simulation Name' onChange={(text) => { this.setState({ ...this.state, tempNewName: text.target.value }) }} />\r\n                        </Form.Group>\r\n                        <Form.Group>\r\n                            <Form.Label>Choose Template Simulation to Use</Form.Label>\r\n                            <Form.Control\r\n                            as=\"select\"\r\n                            className=\"my-1 mr-sm-2\"\r\n                                onChange={(text) => { if (text.target.value !== '') { this.setState({ ...this.state, tempNewTemplate: text.target.value }) } }}\r\n                            defaultValue=''\r\n                            custom\r\n                            >\r\n                                <option value='' disabled>Choose Template Simulation</option>\r\n                                {Object.keys(this.props.templateSimulation.options).map((key) => {\r\n                                    return (<option value={key} key={key}>{this.props.templateSimulation.options[key]}</option>)\r\n                                })}\r\n                            </Form.Control>\r\n                        </Form.Group>\r\n                    </Form>\r\n                </Modal.Body>\r\n                <Modal.Footer>\r\n                    {(this.state.tempNewTemplate !== '' && this.state.tempNewName !== '') ?\r\n                        <Button variant=\"primary\" onClick={() => { this.props.handleNewActiveSimulation(this.state.tempNewName, this.state.tempNewTemplate); this.setState({ ...this.state, showNew: false, tempNewName: '', tempNewTemplate: '' }); alert(this.state.tempNewName + ' Created!'); }}>\r\n                            Create\r\n                    </Button>\r\n                        : <></>}\r\n                    <Button variant=\"secondary\" onClick={() => { this.setState({ ...this.state, showNew: false, tempNewName: '', tempNewTemplate: '' }) }}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    deleteSimulation() {\r\n        return (\r\n            <Modal\r\n                show={this.state.showDelete}\r\n                onHide={() => { this.setState({ ...this.state, showDelete: false }) }}\r\n                backdrop=\"static\"\r\n                keyboard={false}\r\n            >\r\n                <Modal.Header>\r\n                    <Modal.Title>Are you sure you want to delete {this.props.activeSimulation.simulation.activeName}?</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Footer>\r\n                    <Button variant=\"danger\" onClick={() => { this.setState({ ...this.state, showDelete: false, selectSim: '' }); this.props.handleDeleteActiveSimulation(this.state.selectSim); }}>\r\n                        Delete\r\n                    </Button>\r\n                    <Button variant=\"secondary\" onClick={() => { this.setState({ ...this.state, showDelete: false }) }}>\r\n                        Cancel\r\n                    </Button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n        )\r\n    }\r\n\r\n    copyToClipboard() {\r\n        const el = document.createElement('textarea');\r\n        const root = window.location.origin + '/viewsimulation/';\r\n        el.value = root + this.props.activeSimulation.simulation.key;\r\n        el.setAttribute('readOnly', '');\r\n        el.style.position = 'absolute';\r\n        el.style.left = '-9999px';\r\n        document.body.appendChild(el);\r\n        el.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(el);\r\n        alert('Copied: ' + root + this.props.activeSimulation.simulation.key);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.newSimulation()}\r\n                {this.deleteSimulation()}\r\n                {this.userStatus()}\r\n                <Form inline style={{ margin: '20px' }}>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        className=\"my-1 mr-sm-2\"\r\n                        onChange={(text) => { if (text.target.value !== '') { this.setState({ ...this.state, selectSim: text.target.value, status: false }); this.props.handleGrabActiveSimulation(text.target.value); setTimeout(() => { this.setState({ ...this.state, status: true }) }, 1000) } }}\r\n                        defaultValue=''\r\n                        custom\r\n                    >\r\n                        <option value='' disabled>Choose Active Simulation</option>\r\n                        {Object.keys(this.props.activeSimulation.options).map((key) => {\r\n                            return (<option value={key} key={key}>{this.props.activeSimulation.options[key]}</option>)\r\n                        })}\r\n                    </Form.Control>\r\n                    <Button variant=\"outline-success\" style={{ marginLeft: '10px' }} onClick={() => { this.setState({ ...this.state, showNew: true }) }}>\r\n                        Create Active Simulation\r\n                    </Button>\r\n                    {(this.state.selectSim !== '') ? <>\r\n                        <Button variant=\"outline-danger\" style={{ marginLeft: '10px' }} onClick={() => { this.setState({ ...this.state, showDelete: true }) }}>\r\n                            Delete Current Simulation\r\n                        </Button>\r\n                        <Button variant=\"outline-secondary\" style={{ marginLeft: '10px' }} onClick={() => { this.copyToClipboard() }}>\r\n                            Copy Simulation Link\r\n                        </Button> </>\r\n                        : <></>}\r\n                </Form>\r\n                {(this.state.status) ?\r\n                    (this.state.selectSim !== '') ?\r\n                        <SimulationSheet sim={this.state.selectSim} /> :\r\n                        <></>\r\n\r\n                    :\r\n                    <PulseLoader\r\n                        css={{ position: 'absolute', top: '40vh', left: '40vw' }}\r\n                        size={100}\r\n                        color={\"#123abc\"}\r\n                        loading={true}\r\n                    />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeSimulation: state.activeSimulation,\r\n        templateSimulation: state.templateSimulation,\r\n        userStatus: state.userStatus\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { handleNewActiveSimulation, handleGrabActiveSimulation, handleDeleteActiveSimulation, handleChangeUserStatus })(Main));"]},"metadata":{},"sourceType":"module"}