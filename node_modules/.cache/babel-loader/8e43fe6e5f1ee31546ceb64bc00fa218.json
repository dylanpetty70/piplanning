{"ast":null,"code":"import { databaseRef } from '../firebaseAPI';\nexport const handleNewTemplateFeature = (sim, name) => async dispatch => {\n  let newFeatureKey = databaseRef.child(\"templateSimluations/\" + sim + \"/features\").push().key;\n  let data = {\n    name: name,\n    key: newFeatureKey\n  };\n  let featurePath = \"templateSimulations/\" + sim + \"/features/\" + String(newFeatureKey);\n  await databaseRef.update({\n    [featurePath]: data\n  });\n};\nexport const handleDeleteTemplateFeature = (sim, feat) => async dispatch => {\n  await databaseRef.child(\"templateSimulations/\" + sim + \"/features/\" + feat).remove();\n};\nexport const handleUpdateTemplateFeature = (sim, feat, data) => async dispatch => {\n  await databaseRef.child(\"templateSimulations/\" + sim + \"/features\").update({\n    [feat]: data\n  });\n};\nexport const handleNewTemplateStory = (sim, feat, name) => async dispatch => {\n  let newStoryKey = databaseRef.child(\"templateSimluations/\" + sim + \"/features/\" + feat + \"/stories\").push().key;\n  let data = {\n    name: name,\n    key: newStoryKey\n  };\n  let storyPath = \"templateSimulations/\" + sim + \"/features/\" + feat + \"/stories/\" + String(newStoryKey);\n  await databaseRef.update({\n    [storyPath]: data\n  });\n};\nexport const handleDeleteTemplateStory = (sim, feat, story) => async dispatch => {\n  await databaseRef.child(\"templateSimulations/\" + sim + \"/features/\" + feat + \"/stories/\" + story).remove();\n};\nexport const handleUpdateTemplateStory = (sim, feat, story, data) => async dispatch => {\n  await databaseRef.child(\"templateSimulations/\" + sim + \"/features/\" + feat + \"/stories\").update({\n    [story]: data\n  });\n};\nexport const handleUpdateActiveStory = (sim, feat, story, data) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/features/\" + feat + \"/stories\").update({\n    [story]: data\n  });\n};","map":{"version":3,"sources":["C:/Users/dylan/source/repos/piplanning/src/actions/features.js"],"names":["databaseRef","handleNewTemplateFeature","sim","name","dispatch","newFeatureKey","child","push","key","data","featurePath","String","update","handleDeleteTemplateFeature","feat","remove","handleUpdateTemplateFeature","handleNewTemplateStory","newStoryKey","storyPath","handleDeleteTemplateStory","story","handleUpdateTemplateStory","handleUpdateActiveStory"],"mappings":"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","sourcesContent":["import { databaseRef } from '../firebaseAPI';\r\n\r\nexport const handleNewTemplateFeature = (sim, name) => async dispatch => {\r\n    let newFeatureKey = databaseRef.child(\"templateSimluations/\" + sim + \"/features\").push().key;\r\n    let data = { name: name, key: newFeatureKey };\r\n\r\n    let featurePath = \"templateSimulations/\" + sim + \"/features/\" + String(newFeatureKey);\r\n    \r\n    await databaseRef.update({ [featurePath]: data });\r\n}\r\n\r\nexport const handleDeleteTemplateFeature = (sim, feat) => async dispatch => {\r\n    await databaseRef.child(\"templateSimulations/\" + sim + \"/features/\" + feat).remove();\r\n}\r\n\r\nexport const handleUpdateTemplateFeature = (sim, feat, data) => async dispatch => {\r\n    await databaseRef.child(\"templateSimulations/\" + sim + \"/features\").update({ [feat]: data });\r\n}\r\n\r\nexport const handleNewTemplateStory = (sim, feat, name) => async dispatch => {\r\n    let newStoryKey = databaseRef.child(\"templateSimluations/\" + sim + \"/features/\" + feat + \"/stories\").push().key;\r\n    let data = { name: name, key: newStoryKey };\r\n\r\n    let storyPath = \"templateSimulations/\" + sim + \"/features/\" + feat + \"/stories/\" + String(newStoryKey);\r\n\r\n    await databaseRef.update({ [storyPath]: data });\r\n}\r\n\r\nexport const handleDeleteTemplateStory = (sim, feat, story) => async dispatch => {\r\n    await databaseRef.child(\"templateSimulations/\" + sim + \"/features/\" + feat + \"/stories/\" + story).remove();\r\n}\r\n\r\nexport const handleUpdateTemplateStory = (sim, feat, story, data) => async dispatch => {\r\n    await databaseRef.child(\"templateSimulations/\" + sim + \"/features/\" + feat + \"/stories\").update({ [story]: data });\r\n}\r\n\r\nexport const handleUpdateActiveStory = (sim, feat, story, data) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/features/\" + feat + \"/stories\").update({ [story]: data });\r\n}"]},"metadata":{},"sourceType":"module"}