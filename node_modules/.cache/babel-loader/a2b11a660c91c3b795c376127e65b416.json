{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dylan\\\\source\\\\repos\\\\piplanning-main\\\\src\\\\components\\\\viewPage\\\\main.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { handleNewActiveSimulation, handleGrabActiveSimulation, handleDeleteActiveSimulation } from '../../actions/simulation';\nimport Form from 'react-bootstrap/Form';\nimport { withRouter } from 'react-router';\nimport TeamInfo from './teamInfo';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectTeam: '',\n      status: true,\n      ready: false\n    };\n  }\n\n  componentDidMount() {\n    this.props.handleGrabActiveSimulation(this.props.match.params.id);\n    setTimeout(() => {\n      this.setState({ ...this.state,\n        ready: true\n      });\n    }, 500);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }\n    }, this.state.ready ? /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      inline: true,\n      style: {\n        margin: '20px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      className: \"my-1 mr-sm-2\",\n      onChange: text => {\n        if (text.target.value !== '') {\n          this.setState({ ...this.state,\n            selectTeam: text.target.value,\n            status: false\n          });\n          setTimeout(() => {\n            this.setState({ ...this.state,\n              status: true\n            });\n          }, 1000);\n        }\n      },\n      defaultValue: \"\",\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }\n    }, \"Choose Team\"), this.props.activeSimulation.simulation.teams ? Object.keys(this.props.activeSimulation.simulation.teams).map(key => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: key,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 45\n        }\n      }, this.props.activeSimulation.simulation.teams[key].name);\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null)))) : /*#__PURE__*/React.createElement(React.Fragment, null), this.state.selectTeam !== '' ? /*#__PURE__*/React.createElement(TeamInfo, {\n      team: this.state.selectTeam,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 21\n      }\n    }) : /*#__PURE__*/React.createElement(React.Fragment, null));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeSimulation: state.activeSimulation,\n    templateSimulation: state.templateSimulation\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, {\n  handleNewActiveSimulation,\n  handleGrabActiveSimulation,\n  handleDeleteActiveSimulation\n})(Main));","map":{"version":3,"sources":["C:/Users/dylan/source/repos/piplanning-main/src/components/viewPage/main.js"],"names":["React","Component","connect","handleNewActiveSimulation","handleGrabActiveSimulation","handleDeleteActiveSimulation","Form","withRouter","TeamInfo","Main","constructor","props","state","selectTeam","status","ready","componentDidMount","match","params","id","setTimeout","setState","render","margin","text","target","value","activeSimulation","simulation","teams","Object","keys","map","key","name","mapStateToProps","templateSimulation"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,yBAAT,EAAoCC,0BAApC,EAAgEC,4BAAhE,QAAoG,0BAApG;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,QAAP,MAAqB,YAArB;;AAGA,MAAMC,IAAN,SAAmBR,SAAnB,CAA6B;AAEzBS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,UAAU,EAAE,EADH;AAETC,MAAAA,MAAM,EAAE,IAFC;AAGTC,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKL,KAAL,CAAWP,0BAAX,CAAsC,KAAKO,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBC,EAA9D;AACAC,IAAAA,UAAU,CAAC,MAAM;AACb,WAAKC,QAAL,CAAc,EAAE,GAAG,KAAKT,KAAV;AAAiBG,QAAAA,KAAK,EAAE;AAAxB,OAAd;AACH,KAFS,EAEP,GAFO,CAAV;AAGH;;AAEDO,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACM,KAAKV,KAAL,CAAWG,KAAZ,gBACD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAM,MAAA,MAAM,MAAZ;AAAa,MAAA,KAAK,EAAE;AAAEQ,QAAAA,MAAM,EAAE;AAAV,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,OAAN;AACI,MAAA,EAAE,EAAC,QADP;AAEI,MAAA,SAAS,EAAC,cAFd;AAGI,MAAA,QAAQ,EAAGC,IAAD,IAAU;AAAE,YAAIA,IAAI,CAACC,MAAL,CAAYC,KAAZ,KAAsB,EAA1B,EAA8B;AAAE,eAAKL,QAAL,CAAc,EAAE,GAAG,KAAKT,KAAV;AAAiBC,YAAAA,UAAU,EAAEW,IAAI,CAACC,MAAL,CAAYC,KAAzC;AAAgDZ,YAAAA,MAAM,EAAE;AAAxD,WAAd;AAAgFM,UAAAA,UAAU,CAAC,MAAM;AAAE,iBAAKC,QAAL,CAAc,EAAE,GAAG,KAAKT,KAAV;AAAiBE,cAAAA,MAAM,EAAE;AAAzB,aAAd;AAAgD,WAAzD,EAA2D,IAA3D,CAAV;AAA4E;AAAE,OAHxN;AAII,MAAA,YAAY,EAAC,EAJjB;AAKI,MAAA,MAAM,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAOI;AAAQ,MAAA,KAAK,EAAC,EAAd;AAAiB,MAAA,QAAQ,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPJ,EAQM,KAAKH,KAAL,CAAWgB,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAxC,GACOC,MAAM,CAACC,IAAP,CAAY,KAAKpB,KAAL,CAAWgB,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAnD,EAA0DG,GAA1D,CAA+DC,GAAD,IAAS;AACnE,0BAAQ;AAAQ,QAAA,KAAK,EAAEA,GAAf;AAAoB,QAAA,GAAG,EAAEA,GAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA+B,KAAKtB,KAAL,CAAWgB,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6CI,GAA7C,EAAkDC,IAAjF,CAAR;AACH,KAFD,CADP,gBAIK,yCAZV,CADJ,CADA,CADC,gBAmBK,yCApBV,EAqBM,KAAKtB,KAAL,CAAWC,UAAX,KAA0B,EAA3B,gBACG,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE,KAAKD,KAAL,CAAWC,UAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,gBAEK,yCAvBV,CADJ;AA2BH;;AA9CwB;;AAiD7B,MAAMsB,eAAe,GAAGvB,KAAK,IAAI;AAC7B,SAAO;AACHe,IAAAA,gBAAgB,EAAEf,KAAK,CAACe,gBADrB;AAEHS,IAAAA,kBAAkB,EAAExB,KAAK,CAACwB;AAFvB,GAAP;AAIH,CALD;;AAOA,eAAe7B,UAAU,CAACL,OAAO,CAACiC,eAAD,EAAkB;AAAEhC,EAAAA,yBAAF;AAA6BC,EAAAA,0BAA7B;AAAyDC,EAAAA;AAAzD,CAAlB,CAAP,CAAkHI,IAAlH,CAAD,CAAzB","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { handleNewActiveSimulation, handleGrabActiveSimulation, handleDeleteActiveSimulation } from '../../actions/simulation';\r\nimport Form from 'react-bootstrap/Form';\r\nimport { withRouter } from 'react-router';\r\nimport TeamInfo from './teamInfo';\r\n\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectTeam: '',\r\n            status: true,\r\n            ready: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.handleGrabActiveSimulation(this.props.match.params.id);\r\n        setTimeout(() => {\r\n            this.setState({ ...this.state, ready: true})\r\n        }, 500)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {(this.state.ready) ? \r\n                <div>\r\n                <Form inline style={{ margin: '20px' }}>\r\n                    <Form.Control\r\n                        as=\"select\"\r\n                        className=\"my-1 mr-sm-2\"\r\n                        onChange={(text) => { if (text.target.value !== '') { this.setState({ ...this.state, selectTeam: text.target.value, status: false }); setTimeout(() => { this.setState({ ...this.state, status: true }) }, 1000) } }}\r\n                        defaultValue=''\r\n                        custom\r\n                    >\r\n                        <option value='' disabled>Choose Team</option>\r\n                        {(this.props.activeSimulation.simulation.teams) ?\r\n                                Object.keys(this.props.activeSimulation.simulation.teams).map((key) => {\r\n                                    return (<option value={key} key={key}>{this.props.activeSimulation.simulation.teams[key].name}</option>)\r\n                                })\r\n                            : <></>}\r\n                    </Form.Control>\r\n                    </Form>\r\n                    </div>\r\n                    : <></>}\r\n                {(this.state.selectTeam !== '') ?  \r\n                    <TeamInfo team={this.state.selectTeam} />\r\n                    : <></>}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeSimulation: state.activeSimulation,\r\n        templateSimulation: state.templateSimulation\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, { handleNewActiveSimulation, handleGrabActiveSimulation, handleDeleteActiveSimulation })(Main));"]},"metadata":{},"sourceType":"module"}