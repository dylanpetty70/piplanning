{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dylan\\\\source\\\\repos\\\\piplanning-main\\\\src\\\\components\\\\activePage\\\\completeView.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { handleGrabTemplateSimulation, handleNewTemplateSimulation } from '../../actions/simulation';\nimport { handleNewTemplateFeature, handleDeleteTemplateFeature, handleUpdateTemplateFeature, handleNewTemplateStory, handleUpdateTemplateStory } from '../../actions/features';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedPage: 'iterations'\n    };\n    this.iterations = this.iterations.bind(this);\n    this.pageSelection = this.pageSelection.bind(this);\n    this.calculateCapacity = this.calculateCapacity.bind(this);\n    this.calculateLoad = this.calculateLoad.bind(this);\n    this.features = this.features.bind(this);\n    this.storiesSized = this.storiesSized.bind(this);\n    this.storiesAssigned = this.storiesAssigned.bind(this);\n    this.piObjectives = this.piObjectives.bind(this);\n    this.risks = this.risks.bind(this);\n  }\n\n  calculateCapacity(iteration) {\n    let total = 0;\n\n    if (this.props.activeSimulation.simulation.teams[this.props.team].users) {\n      for (var keys in this.props.activeSimulation.simulation.teams[this.props.team].users) {\n        let data = this.props.activeSimulation.simulation.teams[this.props.team].users[keys];\n        let num = data.iterations && data.iterations[iteration] ? 8 - Number(data.iterations[iteration]) : 8;\n        total = num ? total + num : total;\n      }\n    }\n\n    return total;\n  }\n\n  calculateLoad(iteration) {\n    let total = 0;\n\n    if (this.props.activeSimulation.simulation.teams[this.props.team].iterations[iteration].story) {\n      for (var keys in this.props.activeSimulation.simulation.teams[this.props.team].iterations[iteration].story) {\n        let featKey = this.props.activeSimulation.simulation.teams[this.props.team].iterations[iteration].story[keys].featKey;\n        let storyKey = this.props.activeSimulation.simulation.teams[this.props.team].iterations[iteration].story[keys].key;\n        let num = Number(this.props.activeSimulation.simulation.features[featKey].stories[storyKey].size);\n        total = num ? total + num : total;\n      }\n    }\n\n    return total;\n  }\n\n  iterations() {\n    let temp = [];\n    let rows = this.props.activeSimulation.simulation.teams && this.props.activeSimulation.simulation.teams[this.props.team] && this.props.activeSimulation.simulation.teams[this.props.team].iterations ? Object.keys(this.props.activeSimulation.simulation.teams[this.props.team].iterations).map((l, i) => {\n      let data = this.props.activeSimulation.simulation.teams[this.props.team].iterations[l];\n      return /*#__PURE__*/React.createElement(Row, {\n        key: 'iterationrow' + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }\n      }, this.props.activeSimulation.simulation.teams[this.props.team].name), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }\n      }, data.name), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }\n      }, this.calculateCapacity(l)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }\n      }, this.calculateLoad(l)));\n    }) : [];\n    temp.push( /*#__PURE__*/React.createElement(Container, {\n      style: {\n        height: '100%',\n        width: '100%',\n        paddingTop: '20px',\n        overflowY: 'auto'\n      },\n      key: 'iterationcontainer',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 25\n      }\n    }, \"Team\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 25\n      }\n    }, \"Iteration\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 25\n      }\n    }, \"Capacity\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }\n    }, \"Load\"))), rows));\n    return temp;\n  }\n\n  storiesSized(feature) {\n    let total = Object.keys(feature.stories).length;\n    let count = 0;\n\n    for (var key in feature.stories) {\n      if (feature.stories[key].size) {\n        count += 1;\n      }\n    }\n\n    let percentage = Math.floor(100 * count / total);\n    return String(percentage) + '%';\n  }\n\n  storiesAssigned(feature) {\n    let team = this.props.activeSimulation.simulation.teams[this.props.team];\n    let storiesAssigned = {};\n\n    for (var key in team.iterations) {\n      for (var key1 in team.iterations[key].story) {\n        if (storiesAssigned[team.iterations[key].story[key1].featKey]) {\n          storiesAssigned[team.iterations[key].story[key1].featKey].push(team.iterations[key].story[key1].key);\n        } else {\n          storiesAssigned[team.iterations[key].story[key1].featKey] = [team.iterations[key].story[key1].key];\n        }\n      }\n    }\n\n    let total = Object.keys(feature.stories).length;\n    let overlap = storiesAssigned[feature.key] ? storiesAssigned[feature.key] : [];\n    let percentage = Math.floor(100 * overlap.length / total);\n    return String(percentage) + '%';\n  }\n\n  features() {\n    let temp = [];\n    let rows = this.props.activeSimulation.simulation.teams && this.props.activeSimulation.simulation.teams[this.props.team] && this.props.activeSimulation.simulation.teams[this.props.team].features && this.props.activeSimulation.simulation.features ? Object.keys(this.props.activeSimulation.simulation.teams[this.props.team].features).map((l, i) => {\n      let data = this.props.activeSimulation.simulation.features[l];\n      return /*#__PURE__*/React.createElement(Row, {\n        key: 'iterationrow' + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 25\n        }\n      }, this.props.activeSimulation.simulation.teams[this.props.team].name), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 25\n        }\n      }, data.name), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 25\n        }\n      }, this.storiesSized(data)), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 25\n        }\n      }, this.storiesAssigned(data)));\n    }) : [];\n    temp.push( /*#__PURE__*/React.createElement(Container, {\n      style: {\n        height: '100%',\n        width: '100%',\n        paddingTop: '20px',\n        overflowY: 'auto'\n      },\n      key: 'iterationcontainer',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, \"Team\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, \"Feature\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 25\n      }\n    }, \"Stories Sized\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 25\n      }\n    }, \"Stories Assigned\"))), rows));\n    return temp;\n  }\n\n  piObjectives() {\n    let temp = [];\n    let rows = this.props.activeSimulation.simulation.teams && this.props.activeSimulation.simulation.teams[this.props.team] && this.props.activeSimulation.simulation.teams[this.props.team].piObjectives ? Object.keys(this.props.activeSimulation.simulation.teams[this.props.team].piObjectives).map((l, i) => {\n      let data = this.props.activeSimulation.simulation.teams[this.props.team].piObjectives[l];\n      return /*#__PURE__*/React.createElement(Row, {\n        key: 'iterationrow' + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 25\n        }\n      }, this.props.activeSimulation.simulation.teams[this.props.team].name), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 25\n        }\n      }, data.name), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }\n      }, data.type), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 25\n        }\n      }, data.value));\n    }) : [];\n    temp.push( /*#__PURE__*/React.createElement(Container, {\n      style: {\n        height: '100%',\n        width: '100%',\n        paddingTop: '20px',\n        overflowY: 'auto'\n      },\n      key: 'iterationcontainer',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 25\n      }\n    }, \"Team\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 25\n      }\n    }, \"PI Objective\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 25\n      }\n    }, \"Type\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 25\n      }\n    }, \"Business Value\"))), rows));\n    return temp;\n  }\n\n  risks() {\n    let temp = [];\n    let rows = this.props.activeSimulation.simulation.teams && this.props.activeSimulation.simulation.teams[this.props.team] && this.props.activeSimulation.simulation.teams[this.props.team].risks ? Object.keys(this.props.activeSimulation.simulation.teams[this.props.team].risks).map((l, i) => {\n      let data = this.props.activeSimulation.simulation.teams[this.props.team].risks[l];\n      return /*#__PURE__*/React.createElement(Row, {\n        key: 'iterationrow' + i,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 25\n        }\n      }, this.props.activeSimulation.simulation.teams[this.props.team].name), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 25\n        }\n      }, data.name), /*#__PURE__*/React.createElement(Col, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 25\n        }\n      }, data.type));\n    }) : [];\n    temp.push( /*#__PURE__*/React.createElement(Container, {\n      style: {\n        height: '100%',\n        width: '100%',\n        paddingTop: '20px',\n        overflowY: 'auto'\n      },\n      key: 'iterationcontainer',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 25\n      }\n    }, \"Team\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 25\n      }\n    }, \"Risk\")), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        fontSize: '14px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 25\n      }\n    }, \"Type\"))), rows));\n    return temp;\n  }\n\n  pageSelection() {\n    switch (this.state.selectedPage) {\n      case 'iterations':\n        return this.iterations();\n\n      case 'features':\n        return this.features();\n\n      case 'risks':\n        return this.risks();\n\n      case 'piObjectives':\n        return this.piObjectives();\n\n      default:\n        return this.iterations();\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        marginRight: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 29\n      }\n    }, \"Simulation Overview\"), /*#__PURE__*/React.createElement(Card.Subtitle, {\n      style: {\n        marginRight: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 304,\n        columnNumber: 33\n      }\n    }, \"Information will become available as the selected team creates the data\"), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 305,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Nav, {\n      variant: \"tabs\",\n      activeKey: this.state.selectedPage,\n      onSelect: eventKey => {\n        this.setState({ ...this.state,\n          selectedPage: eventKey\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      eventKey: 'iterations',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 33\n      }\n    }, \"Iterations\")), /*#__PURE__*/React.createElement(Nav.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      eventKey: 'features',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 37\n      }\n    }, \"Features\")), /*#__PURE__*/React.createElement(Nav.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      eventKey: 'risks',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 37\n      }\n    }, \"Risks\")), /*#__PURE__*/React.createElement(Nav.Item, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Nav.Link, {\n      eventKey: 'piObjectives',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 37\n      }\n    }, \"PI Objectives\")))), this.pageSelection())));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeSimulation: state.activeSimulation\n  };\n};\n\nexport default connect(mapStateToProps, {\n  handleGrabTemplateSimulation,\n  handleNewTemplateSimulation,\n  handleNewTemplateFeature,\n  handleDeleteTemplateFeature,\n  handleUpdateTemplateFeature,\n  handleNewTemplateStory,\n  handleUpdateTemplateStory\n})(Main);","map":{"version":3,"sources":["C:/Users/dylan/source/repos/piplanning-main/src/components/activePage/completeView.js"],"names":["React","Component","connect","handleGrabTemplateSimulation","handleNewTemplateSimulation","handleNewTemplateFeature","handleDeleteTemplateFeature","handleUpdateTemplateFeature","handleNewTemplateStory","handleUpdateTemplateStory","Form","Card","Nav","Container","Col","Row","Main","constructor","props","state","selectedPage","iterations","bind","pageSelection","calculateCapacity","calculateLoad","features","storiesSized","storiesAssigned","piObjectives","risks","iteration","total","activeSimulation","simulation","teams","team","users","keys","data","num","Number","story","featKey","storyKey","key","stories","size","temp","rows","Object","map","l","i","name","push","height","width","paddingTop","overflowY","fontSize","feature","length","count","percentage","Math","floor","String","key1","overlap","type","value","render","marginRight","eventKey","setState","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,4BAAT,EAAuCC,2BAAvC,QAA0E,0BAA1E;AACA,SAASC,wBAAT,EAAmCC,2BAAnC,EAAgEC,2BAAhE,EAA6FC,sBAA7F,EAAqHC,yBAArH,QAAsJ,wBAAtJ;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAGA,MAAMC,IAAN,SAAmBf,SAAnB,CAA6B;AAEzBgB,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,YAAY,EAAE;AADL,KAAb;AAGA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBC,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,iBAAL,GAAyB,KAAKA,iBAAL,CAAuBF,IAAvB,CAA4B,IAA5B,CAAzB;AACA,SAAKG,aAAL,GAAqB,KAAKA,aAAL,CAAmBH,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKI,QAAL,GAAgB,KAAKA,QAAL,CAAcJ,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKK,YAAL,GAAoB,KAAKA,YAAL,CAAkBL,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKM,eAAL,GAAuB,KAAKA,eAAL,CAAqBN,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKO,YAAL,GAAoB,KAAKA,YAAL,CAAkBP,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKQ,KAAL,GAAa,KAAKA,KAAL,CAAWR,IAAX,CAAgB,IAAhB,CAAb;AACH;;AAEDE,EAAAA,iBAAiB,CAACO,SAAD,EAAY;AACzB,QAAIC,KAAK,GAAG,CAAZ;;AACA,QAAI,KAAKd,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DC,KAAlE,EAAyE;AACrE,WAAK,IAAIC,IAAT,IAAiB,KAAKpB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DC,KAA/E,EAAsF;AAClF,YAAIE,IAAI,GAAG,KAAKrB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DC,KAA9D,CAAoEC,IAApE,CAAX;AAEA,YAAIE,GAAG,GAAID,IAAI,CAAClB,UAAL,IAAmBkB,IAAI,CAAClB,UAAL,CAAgBU,SAAhB,CAApB,GAAkD,IAAIU,MAAM,CAACF,IAAI,CAAClB,UAAL,CAAgBU,SAAhB,CAAD,CAA5D,GAA2F,CAArG;AACAC,QAAAA,KAAK,GAAIQ,GAAD,GAAQR,KAAK,GAAGQ,GAAhB,GAAsBR,KAA9B;AACH;AACJ;;AACD,WAAOA,KAAP;AACH;;AAEDP,EAAAA,aAAa,CAACM,SAAD,EAAY;AACrB,QAAIC,KAAK,GAAG,CAAZ;;AACA,QAAI,KAAKd,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8Df,UAA9D,CAAyEU,SAAzE,EAAoFW,KAAxF,EAA+F;AAC3F,WAAK,IAAIJ,IAAT,IAAiB,KAAKpB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8Df,UAA9D,CAAyEU,SAAzE,EAAoFW,KAArG,EAA4G;AACxG,YAAIC,OAAO,GAAG,KAAKzB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8Df,UAA9D,CAAyEU,SAAzE,EAAoFW,KAApF,CAA0FJ,IAA1F,EAAgGK,OAA9G;AACA,YAAIC,QAAQ,GAAG,KAAK1B,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8Df,UAA9D,CAAyEU,SAAzE,EAAoFW,KAApF,CAA0FJ,IAA1F,EAAgGO,GAA/G;AAEA,YAAIL,GAAG,GAAGC,MAAM,CAAC,KAAKvB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCR,QAAvC,CAAgDiB,OAAhD,EAAyDG,OAAzD,CAAiEF,QAAjE,EAA2EG,IAA5E,CAAhB;AACAf,QAAAA,KAAK,GAAIQ,GAAD,GAAQR,KAAK,GAAGQ,GAAhB,GAAsBR,KAA9B;AACH;AACJ;;AACD,WAAOA,KAAP;AACH;;AAEDX,EAAAA,UAAU,GAAG;AACT,QAAI2B,IAAI,GAAG,EAAX;AAEA,QAAIC,IAAI,GAAI,KAAK/B,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,IAAgD,KAAKjB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,CAAhD,IAAiH,KAAKlB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8Df,UAAhL,GACP6B,MAAM,CAACZ,IAAP,CAAY,KAAKpB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8Df,UAA1E,EAAsF8B,GAAtF,CAA0F,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAChG,UAAId,IAAI,GAAG,KAAKrB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8Df,UAA9D,CAAyE+B,CAAzE,CAAX;AACA,0BACI,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAE,iBAAiBC,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKnC,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DkB,IADnE,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKf,IAAI,CAACe,IADV,CAJJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK9B,iBAAL,CAAuB4B,CAAvB,CADL,CAPJ,eAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK3B,aAAL,CAAmB2B,CAAnB,CADL,CAVJ,CADJ;AAgBH,KAlBD,CADO,GAoBL,EApBN;AAsBAJ,IAAAA,IAAI,CAACO,IAAL,eACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE,MAAzB;AAAiCC,QAAAA,UAAU,EAAE,MAA7C;AAAqDC,QAAAA,SAAS,EAAE;AAAhE,OAAlB;AAA4F,MAAA,GAAG,EAAE,oBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,CAJJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CAPJ,eAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAVJ,CADJ,EAeKX,IAfL,CADJ;AAoBA,WAAOD,IAAP;AACH;;AAEDrB,EAAAA,YAAY,CAACkC,OAAD,EAAU;AAClB,QAAI7B,KAAK,GAAGkB,MAAM,CAACZ,IAAP,CAAYuB,OAAO,CAACf,OAApB,EAA6BgB,MAAzC;AACA,QAAIC,KAAK,GAAG,CAAZ;;AAEA,SAAK,IAAIlB,GAAT,IAAgBgB,OAAO,CAACf,OAAxB,EAAiC;AAC7B,UAAIe,OAAO,CAACf,OAAR,CAAgBD,GAAhB,EAAqBE,IAAzB,EAA+B;AAC3BgB,QAAAA,KAAK,IAAI,CAAT;AACH;AACJ;;AAED,QAAIC,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAW,MAAMH,KAAN,GAAc/B,KAAzB,CAAjB;AAEA,WAAOmC,MAAM,CAACH,UAAD,CAAN,GAAqB,GAA5B;AACH;;AAEDpC,EAAAA,eAAe,CAACiC,OAAD,EAAU;AACrB,QAAIzB,IAAI,GAAG,KAAKlB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,CAAX;AACA,QAAIR,eAAe,GAAG,EAAtB;;AAEA,SAAK,IAAIiB,GAAT,IAAgBT,IAAI,CAACf,UAArB,EAAiC;AAC7B,WAAK,IAAI+C,IAAT,IAAiBhC,IAAI,CAACf,UAAL,CAAgBwB,GAAhB,EAAqBH,KAAtC,EAA6C;AACzC,YAAId,eAAe,CAACQ,IAAI,CAACf,UAAL,CAAgBwB,GAAhB,EAAqBH,KAArB,CAA2B0B,IAA3B,EAAiCzB,OAAlC,CAAnB,EAA+D;AAC3Df,UAAAA,eAAe,CAACQ,IAAI,CAACf,UAAL,CAAgBwB,GAAhB,EAAqBH,KAArB,CAA2B0B,IAA3B,EAAiCzB,OAAlC,CAAf,CAA0DY,IAA1D,CAA+DnB,IAAI,CAACf,UAAL,CAAgBwB,GAAhB,EAAqBH,KAArB,CAA2B0B,IAA3B,EAAiCvB,GAAhG;AACH,SAFD,MAEO;AACHjB,UAAAA,eAAe,CAACQ,IAAI,CAACf,UAAL,CAAgBwB,GAAhB,EAAqBH,KAArB,CAA2B0B,IAA3B,EAAiCzB,OAAlC,CAAf,GAA4D,CAACP,IAAI,CAACf,UAAL,CAAgBwB,GAAhB,EAAqBH,KAArB,CAA2B0B,IAA3B,EAAiCvB,GAAlC,CAA5D;AACH;AACJ;AACJ;;AAED,QAAIb,KAAK,GAAGkB,MAAM,CAACZ,IAAP,CAAYuB,OAAO,CAACf,OAApB,EAA6BgB,MAAzC;AACA,QAAIO,OAAO,GAAIzC,eAAe,CAACiC,OAAO,CAAChB,GAAT,CAAhB,GAAiCjB,eAAe,CAACiC,OAAO,CAAChB,GAAT,CAAhD,GAAgE,EAA9E;AAEA,QAAImB,UAAU,GAAGC,IAAI,CAACC,KAAL,CAAW,MAAMG,OAAO,CAACP,MAAd,GAAuB9B,KAAlC,CAAjB;AAEA,WAAOmC,MAAM,CAACH,UAAD,CAAN,GAAqB,GAA5B;AACH;;AAEDtC,EAAAA,QAAQ,GAAG;AACP,QAAIsB,IAAI,GAAG,EAAX;AAEA,QAAIC,IAAI,GAAI,KAAK/B,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,IAAgD,KAAKjB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,CAAhD,IAAiH,KAAKlB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DV,QAA/K,IAA2L,KAAKR,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCR,QAAnO,GACPwB,MAAM,CAACZ,IAAP,CAAY,KAAKpB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DV,QAA1E,EAAoFyB,GAApF,CAAwF,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC9F,UAAId,IAAI,GAAG,KAAKrB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCR,QAAvC,CAAgD0B,CAAhD,CAAX;AACA,0BACI,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAE,iBAAiBC,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKnC,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DkB,IADnE,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKf,IAAI,CAACe,IADV,CAJJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAK3B,YAAL,CAAkBY,IAAlB,CADL,CAPJ,eAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKX,eAAL,CAAqBW,IAArB,CADL,CAVJ,CADJ;AAgBH,KAlBD,CADO,GAoBL,EApBN;AAsBAS,IAAAA,IAAI,CAACO,IAAL,eACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE,MAAzB;AAAiCC,QAAAA,UAAU,EAAE,MAA7C;AAAqDC,QAAAA,SAAS,EAAE;AAAhE,OAAlB;AAA4F,MAAA,GAAG,EAAE,oBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,CAJJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAPJ,eAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,CAVJ,CADJ,EAeKX,IAfL,CADJ;AAoBA,WAAOD,IAAP;AACH;;AAEDnB,EAAAA,YAAY,GAAG;AACX,QAAImB,IAAI,GAAG,EAAX;AAEA,QAAIC,IAAI,GAAI,KAAK/B,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,IAAgD,KAAKjB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,CAAhD,IAAiH,KAAKlB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DP,YAAhL,GACPqB,MAAM,CAACZ,IAAP,CAAY,KAAKpB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DP,YAA1E,EAAwFsB,GAAxF,CAA4F,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAClG,UAAId,IAAI,GAAG,KAAKrB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DP,YAA9D,CAA2EuB,CAA3E,CAAX;AACA,0BACI,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAE,iBAAiBC,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKnC,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DkB,IADnE,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKf,IAAI,CAACe,IADV,CAJJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKf,IAAI,CAAC+B,IADV,CAPJ,eAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK/B,IAAI,CAACgC,KADV,CAVJ,CADJ;AAgBH,KAlBD,CADO,GAoBL,EApBN;AAsBAvB,IAAAA,IAAI,CAACO,IAAL,eACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE,MAAzB;AAAiCC,QAAAA,UAAU,EAAE,MAA7C;AAAqDC,QAAAA,SAAS,EAAE;AAAhE,OAAlB;AAA4F,MAAA,GAAG,EAAE,oBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,CAJJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAPJ,eAUI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CAVJ,CADJ,EAeKX,IAfL,CADJ;AAoBA,WAAOD,IAAP;AACH;;AAEDlB,EAAAA,KAAK,GAAG;AACJ,QAAIkB,IAAI,GAAG,EAAX;AAEA,QAAIC,IAAI,GAAI,KAAK/B,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,IAAgD,KAAKjB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,CAAhD,IAAiH,KAAKlB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DN,KAAhL,GACPoB,MAAM,CAACZ,IAAP,CAAY,KAAKpB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DN,KAA1E,EAAiFqB,GAAjF,CAAqF,CAACC,CAAD,EAAIC,CAAJ,KAAU;AAC3F,UAAId,IAAI,GAAG,KAAKrB,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DN,KAA9D,CAAoEsB,CAApE,CAAX;AACA,0BACI,oBAAC,GAAD;AAAK,QAAA,GAAG,EAAE,iBAAiBC,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKnC,KAAL,CAAWe,gBAAX,CAA4BC,UAA5B,CAAuCC,KAAvC,CAA6C,KAAKjB,KAAL,CAAWkB,IAAxD,EAA8DkB,IADnE,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKf,IAAI,CAACe,IADV,CAJJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKf,IAAI,CAAC+B,IADV,CAPJ,CADJ;AAaH,KAfD,CADO,GAiBL,EAjBN;AAmBAtB,IAAAA,IAAI,CAACO,IAAL,eACI,oBAAC,SAAD;AAAW,MAAA,KAAK,EAAE;AAAEC,QAAAA,MAAM,EAAE,MAAV;AAAkBC,QAAAA,KAAK,EAAE,MAAzB;AAAiCC,QAAAA,UAAU,EAAE,MAA7C;AAAqDC,QAAAA,SAAS,EAAE;AAAhE,OAAlB;AAA4F,MAAA,GAAG,EAAE,oBAAjG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEC,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,eAII,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAJJ,eAOI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEA,QAAAA,QAAQ,EAAE;AAAZ,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CAPJ,CADJ,EAYKX,IAZL,CADJ;AAiBA,WAAOD,IAAP;AACH;;AAEDzB,EAAAA,aAAa,GAAG;AACZ,YAAQ,KAAKJ,KAAL,CAAWC,YAAnB;AACI,WAAK,YAAL;AACI,eAAO,KAAKC,UAAL,EAAP;;AACJ,WAAK,UAAL;AACI,eAAO,KAAKK,QAAL,EAAP;;AACJ,WAAK,OAAL;AACI,eAAO,KAAKI,KAAL,EAAP;;AACJ,WAAK,cAAL;AACI,eAAO,KAAKD,YAAL,EAAP;;AACJ;AACI,eAAO,KAAKR,UAAL,EAAP;AAVR;AAYH;;AAEDmD,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,KAAK,EAAE;AAAEf,QAAAA,KAAK,EAAE,MAAT;AAAiBD,QAAAA,MAAM,EAAE;AAAzB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,MAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAE;AAAEiB,QAAAA,WAAW,EAAE;AAAf,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BADJ,eAEQ,oBAAC,IAAD,CAAM,QAAN;AAAe,MAAA,KAAK,EAAE;AAAEA,QAAAA,WAAW,EAAE;AAAf,OAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iFAFR,eAGQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHR,CADJ,eAMQ,oBAAC,GAAD;AAAK,MAAA,OAAO,EAAC,MAAb;AAAoB,MAAA,SAAS,EAAE,KAAKtD,KAAL,CAAWC,YAA1C;AAAwD,MAAA,QAAQ,EAAGsD,QAAD,IAAc;AAAE,aAAKC,QAAL,CAAc,EAAE,GAAG,KAAKxD,KAAV;AAAiBC,UAAAA,YAAY,EAAEsD;AAA/B,SAAd;AAA0D,OAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA,oBAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,QAAQ,EAAE,YAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADA,eAMI,oBAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,QAAQ,EAAE,UAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,CANJ,eAWI,oBAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,QAAQ,EAAE,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CAXJ,eAgBI,oBAAC,GAAD,CAAK,IAAL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,GAAD,CAAK,IAAL;AAAU,MAAA,QAAQ,EAAE,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CAhBJ,CANR,CADJ,EA8BS,KAAKnD,aAAL,EA9BT,CADJ,CADA,CADJ;AAsCH;;AAlUwB;;AAqU7B,MAAMqD,eAAe,GAAGzD,KAAK,IAAI;AAC7B,SAAO;AACHc,IAAAA,gBAAgB,EAAEd,KAAK,CAACc;AADrB,GAAP;AAGH,CAJD;;AAMA,eAAe/B,OAAO,CAAC0E,eAAD,EAAkB;AAAEzE,EAAAA,4BAAF;AAAgCC,EAAAA,2BAAhC;AAA6DC,EAAAA,wBAA7D;AAAuFC,EAAAA,2BAAvF;AAAoHC,EAAAA,2BAApH;AAAiJC,EAAAA,sBAAjJ;AAAyKC,EAAAA;AAAzK,CAAlB,CAAP,CAA+NO,IAA/N,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { handleGrabTemplateSimulation, handleNewTemplateSimulation } from '../../actions/simulation';\r\nimport { handleNewTemplateFeature, handleDeleteTemplateFeature, handleUpdateTemplateFeature, handleNewTemplateStory, handleUpdateTemplateStory } from '../../actions/features';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Row from 'react-bootstrap/Row';\r\n\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            selectedPage: 'iterations',\r\n        }\r\n        this.iterations = this.iterations.bind(this);\r\n        this.pageSelection = this.pageSelection.bind(this);\r\n        this.calculateCapacity = this.calculateCapacity.bind(this);\r\n        this.calculateLoad = this.calculateLoad.bind(this);\r\n        this.features = this.features.bind(this);\r\n        this.storiesSized = this.storiesSized.bind(this);\r\n        this.storiesAssigned = this.storiesAssigned.bind(this);\r\n        this.piObjectives = this.piObjectives.bind(this);\r\n        this.risks = this.risks.bind(this);\r\n    }\r\n\r\n    calculateCapacity(iteration) {\r\n        let total = 0;\r\n        if (this.props.activeSimulation.simulation.teams[this.props.team].users) {\r\n            for (var keys in this.props.activeSimulation.simulation.teams[this.props.team].users) {\r\n                let data = this.props.activeSimulation.simulation.teams[this.props.team].users[keys]\r\n\r\n                let num = (data.iterations && data.iterations[iteration]) ? 8 - Number(data.iterations[iteration]) : 8;\r\n                total = (num) ? total + num : total;\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n\r\n    calculateLoad(iteration) {\r\n        let total = 0;\r\n        if (this.props.activeSimulation.simulation.teams[this.props.team].iterations[iteration].story) {\r\n            for (var keys in this.props.activeSimulation.simulation.teams[this.props.team].iterations[iteration].story) {\r\n                let featKey = this.props.activeSimulation.simulation.teams[this.props.team].iterations[iteration].story[keys].featKey\r\n                let storyKey = this.props.activeSimulation.simulation.teams[this.props.team].iterations[iteration].story[keys].key\r\n\r\n                let num = Number(this.props.activeSimulation.simulation.features[featKey].stories[storyKey].size);\r\n                total = (num) ? total + num : total;\r\n            }\r\n        }\r\n        return total;\r\n    }\r\n\r\n    iterations() {\r\n        let temp = [];\r\n\r\n        let rows = (this.props.activeSimulation.simulation.teams && this.props.activeSimulation.simulation.teams[this.props.team] && this.props.activeSimulation.simulation.teams[this.props.team].iterations) ?\r\n            Object.keys(this.props.activeSimulation.simulation.teams[this.props.team].iterations).map((l, i) => {\r\n                let data = this.props.activeSimulation.simulation.teams[this.props.team].iterations[l];\r\n                return (\r\n                    <Row key={'iterationrow' + i}>\r\n                        <Col>\r\n                            {this.props.activeSimulation.simulation.teams[this.props.team].name}\r\n                        </Col>\r\n                        <Col>\r\n                            {data.name}\r\n                        </Col>\r\n                        <Col>\r\n                            {this.calculateCapacity(l)}\r\n                        </Col>\r\n                        <Col>\r\n                            {this.calculateLoad(l)}\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            })\r\n            : [];\r\n\r\n        temp.push(\r\n            <Container style={{ height: '100%', width: '100%', paddingTop: '20px', overflowY: 'auto' }} key={'iterationcontainer'}>\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Team</Card.Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Iteration</Card.Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Capacity</Card.Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Load</Card.Title>\r\n                    </Col>\r\n                </Row>\r\n                {rows}\r\n            </Container>\r\n        );\r\n\r\n        return temp;\r\n    }\r\n\r\n    storiesSized(feature) {\r\n        let total = Object.keys(feature.stories).length;\r\n        let count = 0;\r\n\r\n        for (var key in feature.stories) {\r\n            if (feature.stories[key].size) {\r\n                count += 1;\r\n            }\r\n        }\r\n\r\n        let percentage = Math.floor(100 * count / total);\r\n\r\n        return String(percentage) + '%';\r\n    }\r\n\r\n    storiesAssigned(feature) {\r\n        let team = this.props.activeSimulation.simulation.teams[this.props.team];\r\n        let storiesAssigned = {};\r\n\r\n        for (var key in team.iterations) {\r\n            for (var key1 in team.iterations[key].story) {\r\n                if (storiesAssigned[team.iterations[key].story[key1].featKey]) {\r\n                    storiesAssigned[team.iterations[key].story[key1].featKey].push(team.iterations[key].story[key1].key);\r\n                } else {\r\n                    storiesAssigned[team.iterations[key].story[key1].featKey] = [team.iterations[key].story[key1].key];\r\n                }\r\n            }\r\n        }\r\n\r\n        let total = Object.keys(feature.stories).length;\r\n        let overlap = (storiesAssigned[feature.key]) ? storiesAssigned[feature.key] : [];\r\n\r\n        let percentage = Math.floor(100 * overlap.length / total);\r\n\r\n        return String(percentage) + '%';\r\n    }\r\n\r\n    features() {\r\n        let temp = [];\r\n\r\n        let rows = (this.props.activeSimulation.simulation.teams && this.props.activeSimulation.simulation.teams[this.props.team] && this.props.activeSimulation.simulation.teams[this.props.team].features && this.props.activeSimulation.simulation.features) ?\r\n            Object.keys(this.props.activeSimulation.simulation.teams[this.props.team].features).map((l, i) => {\r\n                let data = this.props.activeSimulation.simulation.features[l];\r\n                return (\r\n                    <Row key={'iterationrow' + i}>\r\n                        <Col>\r\n                            {this.props.activeSimulation.simulation.teams[this.props.team].name}\r\n                        </Col>\r\n                        <Col>\r\n                            {data.name}\r\n                        </Col>\r\n                        <Col>\r\n                            {this.storiesSized(data)}\r\n                        </Col>\r\n                        <Col>\r\n                            {this.storiesAssigned(data)}\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            })\r\n            : [];\r\n\r\n        temp.push(\r\n            <Container style={{ height: '100%', width: '100%', paddingTop: '20px', overflowY: 'auto' }} key={'iterationcontainer'}>\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Team</Card.Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Feature</Card.Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Stories Sized</Card.Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Stories Assigned</Card.Title>\r\n                    </Col>\r\n                </Row>\r\n                {rows}\r\n            </Container>\r\n        );\r\n\r\n        return temp;\r\n    }\r\n\r\n    piObjectives() {\r\n        let temp = [];\r\n\r\n        let rows = (this.props.activeSimulation.simulation.teams && this.props.activeSimulation.simulation.teams[this.props.team] && this.props.activeSimulation.simulation.teams[this.props.team].piObjectives) ?\r\n            Object.keys(this.props.activeSimulation.simulation.teams[this.props.team].piObjectives).map((l, i) => {\r\n                let data = this.props.activeSimulation.simulation.teams[this.props.team].piObjectives[l];\r\n                return (\r\n                    <Row key={'iterationrow' + i}>\r\n                        <Col>\r\n                            {this.props.activeSimulation.simulation.teams[this.props.team].name}\r\n                        </Col>\r\n                        <Col>\r\n                            {data.name}\r\n                        </Col>\r\n                        <Col>\r\n                            {data.type}\r\n                        </Col>\r\n                        <Col>\r\n                            {data.value}\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            })\r\n            : [];\r\n\r\n        temp.push(\r\n            <Container style={{ height: '100%', width: '100%', paddingTop: '20px', overflowY: 'auto' }} key={'iterationcontainer'}>\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Team</Card.Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>PI Objective</Card.Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Type</Card.Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Business Value</Card.Title>\r\n                    </Col>\r\n                </Row>\r\n                {rows}\r\n            </Container>\r\n        );\r\n\r\n        return temp;\r\n    }\r\n\r\n    risks() {\r\n        let temp = [];\r\n\r\n        let rows = (this.props.activeSimulation.simulation.teams && this.props.activeSimulation.simulation.teams[this.props.team] && this.props.activeSimulation.simulation.teams[this.props.team].risks) ?\r\n            Object.keys(this.props.activeSimulation.simulation.teams[this.props.team].risks).map((l, i) => {\r\n                let data = this.props.activeSimulation.simulation.teams[this.props.team].risks[l];\r\n                return (\r\n                    <Row key={'iterationrow' + i}>\r\n                        <Col>\r\n                            {this.props.activeSimulation.simulation.teams[this.props.team].name}\r\n                        </Col>\r\n                        <Col>\r\n                            {data.name}\r\n                        </Col>\r\n                        <Col>\r\n                            {data.type}\r\n                        </Col>\r\n                    </Row>\r\n                );\r\n            })\r\n            : [];\r\n\r\n        temp.push(\r\n            <Container style={{ height: '100%', width: '100%', paddingTop: '20px', overflowY: 'auto' }} key={'iterationcontainer'}>\r\n                <Row>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Team</Card.Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Risk</Card.Title>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card.Title style={{ fontSize: '14px' }}>Type</Card.Title>\r\n                    </Col>\r\n                </Row>\r\n                {rows}\r\n            </Container>\r\n        );\r\n\r\n        return temp;\r\n    }\r\n\r\n    pageSelection() {\r\n        switch (this.state.selectedPage) {\r\n            case 'iterations':\r\n                return this.iterations();\r\n            case 'features':\r\n                return this.features();\r\n            case 'risks':\r\n                return this.risks();\r\n            case 'piObjectives':\r\n                return this.piObjectives();\r\n            default:\r\n                return this.iterations();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: '100%', height: '100%' }}>\r\n            <Card>\r\n                <Card.Body>\r\n                    <Card.Header>\r\n                        <Form>\r\n                            <Card.Title style={{ marginRight: '40px' }}>Simulation Overview</Card.Title>\r\n                                <Card.Subtitle style={{ marginRight: '40px' }}>Information will become available as the selected team creates the data</Card.Subtitle>\r\n                                <br/>\r\n                        </Form>\r\n                            <Nav variant=\"tabs\" activeKey={this.state.selectedPage} onSelect={(eventKey) => { this.setState({ ...this.state, selectedPage: eventKey }) }}>\r\n                            <Nav.Item>\r\n                                <Nav.Link eventKey={'iterations'}>\r\n                                    Iterations\r\n                                </Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey={'features'}>\r\n                                        Features\r\n                                </Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey={'risks'}>\r\n                                        Risks\r\n                                </Nav.Link>\r\n                                </Nav.Item>\r\n                                <Nav.Item>\r\n                                    <Nav.Link eventKey={'piObjectives'}>\r\n                                        PI Objectives\r\n                                </Nav.Link>\r\n                                </Nav.Item>\r\n                            </Nav>\r\n                        </Card.Header>\r\n                        {this.pageSelection()}\r\n                </Card.Body>\r\n            </Card>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeSimulation: state.activeSimulation\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { handleGrabTemplateSimulation, handleNewTemplateSimulation, handleNewTemplateFeature, handleDeleteTemplateFeature, handleUpdateTemplateFeature, handleNewTemplateStory, handleUpdateTemplateStory })(Main);"]},"metadata":{},"sourceType":"module"}