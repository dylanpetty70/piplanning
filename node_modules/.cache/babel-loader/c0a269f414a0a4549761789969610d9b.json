{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dylan\\\\source\\\\repos\\\\piplanning-main\\\\src\\\\components\\\\activePage\\\\simulationSheet.js\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { handleUpdateActiveStory } from '../../actions/features';\nimport { handleNewTeam, handleAddTeamFeature, handleAddTeamIteration, handleUpdateTeamIteration, handleDeleteTeam, handleDeleteTeamFeature } from '../../actions/teams';\nimport Form from 'react-bootstrap/Form';\nimport Card from 'react-bootstrap/Card';\nimport Nav from 'react-bootstrap/Nav';\nimport Button from 'react-bootstrap/Button';\nimport Row from 'react-bootstrap/Row';\nimport Container from 'react-bootstrap/Container';\nimport { MdDelete } from 'react-icons/md';\nimport CompleteView from './completeView';\n\nclass Main extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tempNewTeam: '',\n      tempSelectedTeam: '',\n      tempSelectedFeat: ''\n    };\n    this.teams = this.teams.bind(this);\n  }\n\n  componentDidMount() {}\n\n  teams() {\n    let temp = [];\n    let tempStories = [];\n\n    if (this.props.activeSimulation.simulation.teams) {\n      for (var key in this.props.activeSimulation.simulation.teams) {\n        let keyTemp = key;\n        temp.push( /*#__PURE__*/React.createElement(Nav.Item, {\n          key: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(Nav.Link, {\n          eventKey: key,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }\n        }, this.props.activeSimulation.simulation.teams[key].name, this.state.tempSelectedTeam === key ? /*#__PURE__*/React.createElement(MdDelete, {\n          style: {\n            float: 'right'\n          },\n          onClick: () => {\n            this.props.handleDeleteTeam(this.props.activeSimulation.simulation.key, keyTemp);\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 70\n          }\n        }) : /*#__PURE__*/React.createElement(React.Fragment, null))));\n      }\n\n      if (this.state.tempSelectedTeam !== '' && this.props.activeSimulation.simulation.teams[this.state.tempSelectedTeam]) {\n        if (this.props.activeSimulation.simulation.teams[this.state.tempSelectedTeam].features) {\n          for (var key1 in this.props.activeSimulation.simulation.teams[this.state.tempSelectedTeam].features) {\n            let key2 = key1;\n            tempStories.push( /*#__PURE__*/React.createElement(Row, {\n              style: {\n                marginBottom: '5px'\n              },\n              key: key2,\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 29\n              }\n            }, /*#__PURE__*/React.createElement(Button, {\n              variant: \"secondary\",\n              block: true,\n              style: {\n                marginLeft: '5px',\n                width: '80%',\n                float: 'right',\n                marginBottom: '5px',\n                marginRight: '10px'\n              },\n              onClick: () => {\n                this.setState({ ...this.state,\n                  tempSelectedFeat: key2\n                });\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 33\n              }\n            }, this.props.activeSimulation.simulation.teams[this.state.tempSelectedTeam].features[key1], this.state.tempSelectedFeat === key2 ? /*#__PURE__*/React.createElement(MdDelete, {\n              style: {\n                float: 'right'\n              },\n              onClick: () => {\n                this.props.handleDeleteTeamFeature(this.props.activeSimulation.simulation.key, this.state.tempSelectedTeam, key2);\n              },\n              __self: this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 79\n              }\n            }) : /*#__PURE__*/React.createElement(React.Fragment, null))));\n          }\n        }\n      }\n    }\n\n    return /*#__PURE__*/React.createElement(Card, {\n      style: {\n        margin: '20px',\n        width: '40%',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Card.Body, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Title, {\n      style: {\n        marginRight: '40px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 29\n      }\n    }, \"Teams\"), /*#__PURE__*/React.createElement(Form.Group, {\n      controlId: \"simulationName\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      type: \"username\",\n      placeholder: \"New Team Name\",\n      onChange: text => {\n        this.setState({ ...this.state,\n          tempNewTeam: text.target.value\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      style: {\n        marginLeft: '10px'\n      },\n      onClick: () => {\n        if (this.state.tempNewTeam !== '') {\n          this.props.handleNewTeam(this.props.activeSimulation.simulation.key, this.state.tempNewTeam);\n          alert(this.state.tempNewTeam + ' Created!');\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 25\n      }\n    }, \"Create Team\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-3\",\n      style: {\n        width: '30%',\n        left: '0',\n        overflowY: 'auto',\n        backgroundColor: 'lightGrey',\n        height: '93.5%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Nav, {\n      className: \"flex-column\",\n      variant: \"pills\",\n      onSelect: eventKey => {\n        this.setState({ ...this.state,\n          tempSelectedTeam: eventKey\n        });\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    }, temp)), this.state.tempSelectedTeam !== '' && this.props.activeSimulation.simulation.teams ? this.props.activeSimulation.simulation.teams[this.state.tempSelectedTeam] ? /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginLeft: '30%',\n        width: '65%',\n        position: 'absolute',\n        top: '100px'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(Card.Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      inline: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Form.Group, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(Form.Control, {\n      as: \"select\",\n      className: \"my-1 mr-sm-2\",\n      onChange: text => {\n        if (text.target.value !== '') {\n          this.setState({ ...this.state,\n            tempSelectedFeat: text.target.value\n          });\n        }\n      },\n      defaultValue: \"\",\n      custom: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 49\n      }\n    }, \"Give Feature To Team\"), Object.keys(this.props.activeSimulation.simulation.features).map(key => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: key,\n        key: key,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 61\n        }\n      }, this.props.activeSimulation.simulation.features[key].name);\n    }))), /*#__PURE__*/React.createElement(Button, {\n      variant: \"secondary\",\n      style: {\n        marginLeft: '10px'\n      },\n      onClick: () => {\n        if (this.state.tempSelectedFeat !== '') {\n          this.props.handleAddTeamFeature(this.props.activeSimulation.simulation.key, this.state.tempSelectedTeam, this.state.tempSelectedFeat, this.props.activeSimulation.simulation.features[this.state.tempSelectedFeat].name);\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 41\n      }\n    }, \"Give Feature\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"p-3\",\n      style: {\n        overflowY: 'auto',\n        height: '57vh'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 37\n      }\n    }, tempStories))) : /*#__PURE__*/React.createElement(React.Fragment, null) : /*#__PURE__*/React.createElement(React.Fragment, null)));\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: '100vw',\n        position: 'absolute',\n        height: '75%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, this.teams(), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        position: 'absolute',\n        width: '55vw',\n        left: '42%',\n        top: '20px',\n        height: '100%'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CompleteView, {\n      team: this.state.tempSelectedTeam,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    activeSimulation: state.activeSimulation\n  };\n};\n\nexport default connect(mapStateToProps, {\n  handleUpdateActiveStory,\n  handleNewTeam,\n  handleAddTeamFeature,\n  handleAddTeamIteration,\n  handleUpdateTeamIteration,\n  handleDeleteTeam,\n  handleDeleteTeamFeature\n})(Main);","map":{"version":3,"sources":["C:/Users/dylan/source/repos/piplanning-main/src/components/activePage/simulationSheet.js"],"names":["React","Component","connect","handleUpdateActiveStory","handleNewTeam","handleAddTeamFeature","handleAddTeamIteration","handleUpdateTeamIteration","handleDeleteTeam","handleDeleteTeamFeature","Form","Card","Nav","Button","Row","Container","MdDelete","CompleteView","Main","constructor","props","state","tempNewTeam","tempSelectedTeam","tempSelectedFeat","teams","bind","componentDidMount","temp","tempStories","activeSimulation","simulation","key","keyTemp","push","name","float","features","key1","key2","marginBottom","marginLeft","width","marginRight","setState","margin","height","text","target","value","alert","left","overflowY","backgroundColor","eventKey","position","top","Object","keys","map","render","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { handleUpdateActiveStory } from '../../actions/features';\r\nimport { handleNewTeam, handleAddTeamFeature, handleAddTeamIteration, handleUpdateTeamIteration, handleDeleteTeam, handleDeleteTeamFeature } from '../../actions/teams';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Nav from 'react-bootstrap/Nav';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Container from 'react-bootstrap/Container';\r\nimport { MdDelete } from 'react-icons/md';\r\nimport CompleteView from './completeView';\r\n\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            tempNewTeam: '',\r\n            tempSelectedTeam: '',\r\n            tempSelectedFeat: ''\r\n        }\r\n        this.teams = this.teams.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    teams() {\r\n        let temp = [];\r\n        let tempStories = [];\r\n        if (this.props.activeSimulation.simulation.teams) {\r\n            for (var key in this.props.activeSimulation.simulation.teams) {\r\n                let keyTemp = key;\r\n                temp.push(\r\n                    <Nav.Item key={key}>\r\n                        <Nav.Link eventKey={key}>\r\n                            {this.props.activeSimulation.simulation.teams[key].name}\r\n                            {(this.state.tempSelectedTeam === key) ? <MdDelete style={{ float: 'right' }} onClick={() => { this.props.handleDeleteTeam(this.props.activeSimulation.simulation.key, keyTemp) }} /> : <></>}\r\n                        </Nav.Link>\r\n                    </Nav.Item>\r\n                )\r\n            }\r\n            if (this.state.tempSelectedTeam !== '' && this.props.activeSimulation.simulation.teams[this.state.tempSelectedTeam]) {\r\n                if (this.props.activeSimulation.simulation.teams[this.state.tempSelectedTeam].features) {\r\n                    for (var key1 in this.props.activeSimulation.simulation.teams[this.state.tempSelectedTeam].features) {\r\n                        let key2 = key1;\r\n                        tempStories.push(\r\n                            <Row style={{ marginBottom: '5px' }} key={key2}>\r\n                                <Button variant=\"secondary\" block style={{ marginLeft: '5px', width: '80%', float: 'right', marginBottom: '5px', marginRight: '10px' }} onClick={() => { this.setState({ ...this.state, tempSelectedFeat: key2 }) }}>\r\n                                    {this.props.activeSimulation.simulation.teams[this.state.tempSelectedTeam].features[key1]}\r\n                                    {(this.state.tempSelectedFeat === key2) ? <MdDelete style={{ float: 'right' }} onClick={() => { this.props.handleDeleteTeamFeature(this.props.activeSimulation.simulation.key, this.state.tempSelectedTeam, key2) }} /> : <></>}\r\n                                </Button>\r\n                            </Row>\r\n                        )\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n            return (<Card style={{ margin: '20px', width: '40%', height: '100%' }}>\r\n                <Card.Body>\r\n                    <Card.Header>\r\n                        <Form inline>\r\n                            <Card.Title style={{ marginRight: '40px' }}>Teams</Card.Title>\r\n                            <Form.Group controlId=\"simulationName\">\r\n                                <Form.Control type='username' placeholder='New Team Name' onChange={(text) => { this.setState({ ...this.state, tempNewTeam: text.target.value }) }} />\r\n                            </Form.Group>\r\n                        <Button variant=\"secondary\" style={{ marginLeft: '10px' }} onClick={() => { if (this.state.tempNewTeam !== '') { this.props.handleNewTeam(this.props.activeSimulation.simulation.key, this.state.tempNewTeam); alert(this.state.tempNewTeam + ' Created!'); } }}>\r\n                            Create Team\r\n                        </Button>\r\n                        </Form>\r\n                    </Card.Header>\r\n                    <div className=\"p-3\" style={{ width: '30%', left: '0', overflowY: 'auto', backgroundColor: 'lightGrey', height: '93.5%'}}>\r\n                        <Nav className=\"flex-column\" variant=\"pills\" onSelect={(eventKey) => { this.setState({ ...this.state, tempSelectedTeam: eventKey }) }}>\r\n                            {temp}\r\n                        </Nav>\r\n                    </div>\r\n                    {(this.state.tempSelectedTeam !== '' && this.props.activeSimulation.simulation.teams) ?\r\n                        (this.props.activeSimulation.simulation.teams[this.state.tempSelectedTeam]) ? \r\n                        <div style={{ marginLeft: '30%', width: '65%', position: 'absolute', top: '100px'}}>\r\n                            <Card.Header>\r\n                                <Form inline>\r\n                                        <Form.Group>\r\n                                            <Form.Control\r\n                                                as=\"select\"\r\n                                                className=\"my-1 mr-sm-2\"\r\n                                                onChange={(text) => { if (text.target.value !== '') { this.setState({ ...this.state, tempSelectedFeat: text.target.value }) } }}\r\n                                                defaultValue=''\r\n                                                custom\r\n                                            >\r\n                                                <option value='' disabled>Give Feature To Team</option>\r\n                                                {Object.keys(this.props.activeSimulation.simulation.features).map((key) => {\r\n                                                    return (<option value={key} key={key}>{this.props.activeSimulation.simulation.features[key].name}</option>)\r\n                                                })}\r\n                                            </Form.Control>\r\n                                        </Form.Group>\r\n                                        <Button variant=\"secondary\" style={{ marginLeft: '10px' }} onClick={() => { if (this.state.tempSelectedFeat !== '') { this.props.handleAddTeamFeature(this.props.activeSimulation.simulation.key, this.state.tempSelectedTeam, this.state.tempSelectedFeat, this.props.activeSimulation.simulation.features[this.state.tempSelectedFeat].name); } }}>\r\n                                        Give Feature\r\n                                </Button>\r\n                                </Form>\r\n                            </Card.Header>\r\n                                <div className=\"p-3\" style={{ overflowY: 'auto', height: '57vh' }}>\r\n                                    <Container>\r\n                                        {tempStories}\r\n                                    </Container>\r\n                                </div>\r\n                        </div>\r\n                            : <></>\r\n                            : <></>}\r\n                </Card.Body>\r\n            </Card>)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div style={{ width: '100vw', position: 'absolute', height: '75%' }}>\r\n                {this.teams()}\r\n                <div style={{ position: 'absolute', width: '55vw', left: '42%', top: '20px', height: '100%' }}>\r\n                    <CompleteView team={this.state.tempSelectedTeam} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        activeSimulation: state.activeSimulation\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, { handleUpdateActiveStory, handleNewTeam, handleAddTeamFeature, handleAddTeamIteration, handleUpdateTeamIteration, handleDeleteTeam, handleDeleteTeamFeature })(Main);"]},"metadata":{},"sourceType":"module"}