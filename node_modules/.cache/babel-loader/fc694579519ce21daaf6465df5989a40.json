{"ast":null,"code":"import { databaseRef } from '../firebaseAPI';\nexport const handleNewTeam = (sim, name) => async dispatch => {\n  let newTeamKey = databaseRef.child(\"activeSimulations/\" + sim + \"/teams\").push().key;\n  let teamPath = \"activeSimulations/\" + sim + \"/teams/\" + String(newTeamKey);\n  await databaseRef.update({\n    [teamPath]: {\n      name: name\n    }\n  });\n};\nexport const handleDeleteTeam = (sim, team) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team).remove();\n};\nexport const handleAddTeamFeature = (sim, team, feature, name) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/features\").update({\n    [feature]: name\n  });\n};\nexport const handleDeleteTeamFeature = (sim, team, feat) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/features/\" + feat).remove();\n};\nexport const handleAddTeamIteration = (sim, team, name) => async dispatch => {\n  let newIterationKey = databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations\").push().key;\n  let iterationPath = \"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations/\" + String(newIterationKey);\n  await databaseRef.update({\n    [iterationPath]: {\n      name: name\n    }\n  });\n};\nexport const handleUpdateTeamIteration = (sim, team, iteration, data) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations/\" + iteration).update(data);\n};\nexport const handleDeleteTeamIteration = (sim, team, iteration) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations/\" + iteration).remove();\n};\nexport const handleAddTeamRisk = (sim, team, name) => async dispatch => {\n  let newRiskKey = databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/risks\").push().key;\n  let riskPath = \"activeSimulations/\" + sim + \"/teams/\" + team + \"/risks/\" + String(newRiskKey);\n  await databaseRef.update({\n    [riskPath]: {\n      name: name\n    }\n  });\n};\nexport const handleUpdateTeamRisk = (sim, team, risk, data) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/risks/\" + risk).update(data);\n};\nexport const handleDeleteTeamRisk = (sim, team, risk) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/risks/\" + risk).remove();\n};\nexport const handleAddTeamIterationStory = (sim, team, iteration, key, featKey) => async dispatch => {\n  let newStoryKey = databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations/\" + iteration + \"/story\").push().key;\n  let storyPath = \"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations/\" + iteration + \"/story/\" + String(newStoryKey);\n  await databaseRef.update({\n    [storyPath]: {\n      key: key,\n      featKey: featKey\n    }\n  });\n};\nexport const handleUpdateActiveStory = (sim, feat, story, data) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/features/\" + feat + \"/stories\").update({\n    [story]: data\n  });\n};\nexport const handleDeleteTeamIterationStory = (sim, team, iteration, story) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations/\" + iteration + \"/story/\" + story).remove();\n};\nexport const handleAddTeamUser = (sim, team, name) => async dispatch => {\n  let newUserKey = databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/users\").push().key;\n  let userPath = \"activeSimulations/\" + sim + \"/teams/\" + team + \"/users/\" + String(newUserKey);\n  await databaseRef.update({\n    [userPath]: {\n      name: name\n    }\n  });\n};\nexport const handleUpdateTeamUser = (sim, team, user, data) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/users/\" + user + \"/iterations\").update(data);\n};\nexport const handleDeleteTeamUser = (sim, team, user) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/users/\" + user).remove();\n};\nexport const handleAddTeamPIObjective = (sim, team, name) => async dispatch => {\n  let newPiKey = databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/piObjectives\").push().key;\n  let piPath = \"activeSimulations/\" + sim + \"/teams/\" + team + \"/piObjectives/\" + String(newPiKey);\n  await databaseRef.update({\n    [piPath]: {\n      name: name\n    }\n  });\n};\nexport const handleUpdateTeamPIObjective = (sim, team, objective, data) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/piObjectives/\" + objective).update(data);\n};\nexport const handleDeleteTeamPIObjective = (sim, team, objective) => async dispatch => {\n  await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/piObjectives/\" + objective).remove();\n};","map":{"version":3,"sources":["C:/Users/dylan/source/repos/piplanning-main/src/actions/teams.js"],"names":["databaseRef","handleNewTeam","sim","name","dispatch","newTeamKey","child","push","key","teamPath","String","update","handleDeleteTeam","team","remove","handleAddTeamFeature","feature","handleDeleteTeamFeature","feat","handleAddTeamIteration","newIterationKey","iterationPath","handleUpdateTeamIteration","iteration","data","handleDeleteTeamIteration","handleAddTeamRisk","newRiskKey","riskPath","handleUpdateTeamRisk","risk","handleDeleteTeamRisk","handleAddTeamIterationStory","featKey","newStoryKey","storyPath","handleUpdateActiveStory","story","handleDeleteTeamIterationStory","handleAddTeamUser","newUserKey","userPath","handleUpdateTeamUser","user","handleDeleteTeamUser","handleAddTeamPIObjective","newPiKey","piPath","handleUpdateTeamPIObjective","objective","handleDeleteTeamPIObjective"],"mappings":"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","sourcesContent":["import {databaseRef} from '../firebaseAPI';\r\n\r\n\r\nexport const handleNewTeam = (sim, name) => async dispatch => {\r\n    let newTeamKey = databaseRef.child(\"activeSimulations/\" + sim + \"/teams\").push().key;\r\n\r\n    let teamPath = \"activeSimulations/\" + sim + \"/teams/\" + String(newTeamKey);\r\n    \r\n    await databaseRef.update({ [teamPath]: { name: name } });\r\n}\r\n\r\nexport const handleDeleteTeam = (sim, team) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team).remove();\r\n}\r\n\r\nexport const handleAddTeamFeature = (sim, team, feature, name) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/features\").update({ [feature]: name });\r\n}\r\n\r\nexport const handleDeleteTeamFeature = (sim, team, feat) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/features/\" + feat).remove();\r\n}\r\n\r\nexport const handleAddTeamIteration = (sim, team, name) => async dispatch => {\r\n    let newIterationKey = databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations\").push().key;\r\n\r\n    let iterationPath = \"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations/\" + String(newIterationKey);\r\n\r\n    await databaseRef.update({ [iterationPath]: { name: name } });\r\n}\r\n\r\nexport const handleUpdateTeamIteration = (sim, team, iteration, data) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations/\" + iteration).update(data);\r\n}\r\n\r\nexport const handleDeleteTeamIteration = (sim, team, iteration) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations/\" + iteration).remove();\r\n}\r\n\r\nexport const handleAddTeamRisk = (sim, team, name) => async dispatch => {\r\n    let newRiskKey = databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/risks\").push().key;\r\n\r\n    let riskPath = \"activeSimulations/\" + sim + \"/teams/\" + team  + \"/risks/\" + String(newRiskKey);\r\n\r\n    await databaseRef.update({ [riskPath]: { name: name } });\r\n}\r\n\r\nexport const handleUpdateTeamRisk = (sim, team, risk, data) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/risks/\" + risk).update(data);\r\n}\r\n\r\nexport const handleDeleteTeamRisk = (sim, team, risk) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/risks/\" + risk).remove();\r\n}\r\n\r\nexport const handleAddTeamIterationStory = (sim, team, iteration, key, featKey) => async dispatch => {\r\n    let newStoryKey = databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations/\" + iteration + \"/story\").push().key;\r\n\r\n    let storyPath = \"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations/\" + iteration + \"/story/\" + String(newStoryKey);\r\n\r\n    await databaseRef.update({ [storyPath]: { key: key, featKey: featKey } });\r\n}\r\n\r\nexport const handleUpdateActiveStory = (sim, feat, story, data) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/features/\" + feat + \"/stories\").update({ [story]: data });\r\n}\r\n\r\nexport const handleDeleteTeamIterationStory = (sim, team, iteration, story) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/iterations/\" + iteration + \"/story/\" + story).remove();\r\n}\r\n\r\nexport const handleAddTeamUser = (sim, team, name) => async dispatch => {\r\n    let newUserKey = databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/users\").push().key;\r\n\r\n    let userPath = \"activeSimulations/\" + sim + \"/teams/\" + team + \"/users/\" + String(newUserKey);\r\n\r\n    await databaseRef.update({ [userPath]: { name: name } });\r\n}\r\n\r\nexport const handleUpdateTeamUser = (sim, team, user, data) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/users/\" + user + \"/iterations\").update(data);\r\n}\r\n\r\nexport const handleDeleteTeamUser = (sim, team, user) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/users/\" + user).remove();\r\n}\r\n\r\nexport const handleAddTeamPIObjective = (sim, team, name) => async dispatch => {\r\n    let newPiKey = databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/piObjectives\").push().key;\r\n\r\n    let piPath = \"activeSimulations/\" + sim + \"/teams/\" + team + \"/piObjectives/\" + String(newPiKey);\r\n\r\n    await databaseRef.update({ [piPath]: { name: name } });\r\n}\r\n\r\nexport const handleUpdateTeamPIObjective = (sim, team, objective, data) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/piObjectives/\" + objective).update(data);\r\n}\r\n\r\nexport const handleDeleteTeamPIObjective = (sim, team, objective) => async dispatch => {\r\n    await databaseRef.child(\"activeSimulations/\" + sim + \"/teams/\" + team + \"/piObjectives/\" + objective).remove();\r\n}"]},"metadata":{},"sourceType":"module"}